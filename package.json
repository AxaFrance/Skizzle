{
	"name": "skizzle",
	"version": "2.0.1-alpha",
	"appId": "skizzle",
	"description": "Visualisation des pull requests",
	"main": "./public/build/electron/electron.js",
	"homepage": "./",
	"repository": {
		"type": "git",
		"url": "https://github.com/AxaGuilDEv/skizzle"
	},
	"scripts": {
		"postinstall": "electron-builder install-app-deps",
		"package-lock-sanitizer": "package-lock-sanitizer",
		"svelte-build": "rollup -c --extend",
		"electron-build": "tsc ./src/electron/electron.ts --outDir ./public/build/",
		"build": "run-p svelte-build electron-build",
		"svelte-autobuild": "rollup -c -w --extend",
		"electron-autobuild": "tsc -w ./src/electron/electron.ts --outDir ./public/build/",
		"start": "cross-env TSC_WATCHFILE=UseFsEventsWithFallbackDynamicPolling npm run dev",
		"electron": "electron --trace-warnings .",
		"dev": "run-p start:dev electron-autobuild svelte-autobuild",
		"test": "jest src --config jest.config.js",
		"coverage": "jest --config jest.config.js --coverage",
		"test:watch": "npm test -- --watch",
		"format": "prettier --write ./src/**/*.{js,svelte,html,ts}",
		"lint": "eslint './src/**/*.{js,ts,svelte}'",
		"lint:fix": "eslint --fix './src/**/*.{js,ts,svelte}'",
		"prelint": "npm run format",
		"validate": "svelte-check --workspace src/",
		"start:prod": "sirv --port 3000 public",
		"start:dev": "sirv --port 3000 public --dev",
		"electron:windows": "npm run build && npx electron-builder build --windows",
		"electron:mac": "npm run build && npx electron-builder build --mac",
		"changelog": "auto-changelog",
		"pack": "electron-builder --dir",
		"dist": "electron-builder",
		"resetmodules": "rm -rf node_modules/ && rm package-lock.json && npm i"
	},
	"devDependencies": {
		"@babel/preset-env": "^7.14.8",
		"@commitlint/cli": "^12.1.4",
		"@commitlint/config-conventional": "^12.1.4",
		"@crownframework/svelte-error-boundary": "^1.0.3",
		"@rollup/plugin-commonjs": "^19.0.1",
		"@rollup/plugin-node-resolve": "^13.0.2",
		"@rollup/plugin-typescript": "^8.2.3",
		"@testing-library/jest-dom": "^5.14.1",
		"@testing-library/svelte": "^3.0.3",
		"@tsconfig/svelte": "^2.0.1",
		"@types/jest": "^26.0.24",
		"@types/marked": "^2.0.4",
		"@types/node": "^16.4.0",
		"@types/superagent": "^4.1.12",
		"@types/superagent-proxy": "^2.0.0",
		"@types/uuid": "^8.3.1",
		"babel-jest": "^27.0.6",
		"cross-env": "^7.0.3",
		"electron": "^13.1.7",
		"electron-builder": "^22.11.7",
		"electron-builder-notarize": "^1.2.0",
		"electron-reloader": "^1.2.1",
		"eslint": "^7.31.0",
		"eslint-plugin-svelte3": "^3.2.0",
		"husky": "^7.0.1",
		"jest": "^27.0.6",
		"jest-localstorage-mock": "^2.4.14",
		"jest-transform-stub": "^2.0.0",
		"msw": "^0.32.2",
		"npm-run-all": "^4.1.5",
		"package-lock-sanitizer": "^1.0.1",
		"prettier": "^2.3.2",
		"prettier-plugin-svelte": "^2.3.1",
		"rollup": "^2.53.3",
		"rollup-plugin-css-only": "^3.1.0",
		"rollup-plugin-filesize": "^9.1.1",
		"rollup-plugin-livereload": "^2.0.5",
		"rollup-plugin-node-polyfills": "^0.2.1",
		"rollup-plugin-svelte": "^7.1.0",
		"rollup-plugin-svelte-svg": "^0.2.3",
		"rollup-plugin-terser": "^7.0.2",
		"sass": "^1.35.2",
		"spectron": "^15.0.0",
		"svelte": "^3.41.0",
		"svelte-check": "^2.2.3",
		"svelte-highlight": "^3.1.0",
		"svelte-jester": "^1.7.0",
		"svelte-preprocess": "^4.7.4",
		"ts-jest": "^27.0.4",
		"tslib": "^2.3.0",
		"typescript": "^4.3.5"
	},
	"dependencies": {
		"auto-changelog": "^2.3.0",
		"electron-log": "^4.3.5",
		"electron-updater": "4.3.9",
		"marked": "^2.1.3",
		"sirv-cli": "^1.0.12",
		"superagent": "^6.1.0",
		"superagent-proxy": "^2.1.0",
		"uuid": "^8.3.2"
	},
	"auto-changelog": {
		"template": "./changelog-template.hbs",
		"unreleased": true,
		"commitLimit": false,
		"package": true
	},
	"keywords": [
		"electron",
		"svelte"
	],
	"author": {
		"name": "Mathieu De Baerdemaeker",
		"email": "mathieu.debaerdemaeker@gmail.com",
		"url": "https://github.com/Debaerdm"
	},
	"contributors": [
		{
			"name": "Jerome Boukorras",
			"email": "jerome.boukorras@gmail.com",
			"url": "https://github.com/itupix"
		},
		{
			"name": "Hamza HAMIDI",
			"url": "https://github.com/hamzahamidi"
		},
		{
			"name": "Francis Cornaire",
			"url": "https://github.com/Fcornaire"
		},
		{
			"name": "Arnaud Bernard",
			"url": "https://github.com/bernard-arnaud"
		}
	],
	"license": "MIT",
	"build": {
		"appId": "com.axa.skizzle",
		"productName": "Skizzle",
		"artifactName": "Skizzle-${version}-${arch}.${ext}",
		"copyright": "Copyright Â© 2021 Axa France IARD / Axa France VIE",
		"asar": true,
		"generateUpdatesFilesForAllChannels": true,
		"forceCodeSigning": false,
		"detectUpdateChannel": true,
		"npmRebuild": true,
		"buildDependenciesFromSource": false,
		"afterSign": "electron-builder-notarize",
		"files": [
			"public/",
			"node_modules/"
		],
		"win": {
			"target": [
				{
					"target": "nsis",
					"arch": [
						"x64"
					]
				}
			]
		},
		"mac": {
			"artifactName": "Skizzle-macos.${ext}",
			"category": "public.app-category.developer-tools",
			"icon": "buildResources/icon.icns",
			"hardenedRuntime": true,
			"gatekeeperAssess": false,
			"entitlements": "buildResources/entitlements.mac.plist",
			"entitlementsInherit": "buildResources/entitlements.mac.plist",
			"target": [
				{
					"target": "dmg",
					"arch": [
						"x64"
					]
				},
				{
					"target": "zip",
					"arch": [
						"x64"
					]
				}
			]
		},
		"dmg": {
			"sign": false,
			"contents": [
				{
					"x": 110,
					"y": 150
				},
				{
					"x": 240,
					"y": 150,
					"type": "link",
					"path": "/Applications"
				}
			]
		},
		"nsis": {
			"installerIcon": "buildResources/icon.ico",
			"uninstallerIcon": "buildResources/icon.ico",
			"artifactName": "Skizzle-setup.${ext}",
			"shortcutName": "SKZ"
		},
		"publish": [
			{
				"provider": "github",
				"owner": "AxaGuilDEv",
				"repo": "Skizzle"
			}
		],
		"directories": {
			"buildResources": "buildResources/"
		}
	},
	"husky": {
		"hooks": {
			"pre-commit": "npm run prelint && npm run lint:fix && npm run package-lock-sanitizer && git add package-lock.json",
			"commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
		}
	},
	"msw": {
		"workerDirectory": "public"
	}
}
